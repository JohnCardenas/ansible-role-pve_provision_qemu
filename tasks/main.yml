---
# tasks file for pve_qemu
- name: Check Required Variables
  when: item is undefined
  fail:
    msg: "{{ item }} is undefined"
  loop:
    - pve_qemu.vmid
    - pve_qemu.name
    - pve_qemu.template_id
    - pve_qemu.target_host
    - pve_qemu.state
    - pve_qemu.pool

- name: Get Cluster Resources
  shell: "pvesh get /cluster/resources -type=vm --output-format json"
  register: resources
  changed_when: false

- name: "Create {{ pve_qemu.name }} from Template"
  when: resources.stdout | from_json | selectattr('vmid', 'equalto', pve_qemu.vmid) | first is not defined
  shell: "/usr/bin/pvesh create /nodes/{{ansible_hostname}}/qemu/{{pve_qemu.template_id}}/clone -newid {{pve_qemu.vmid}} -name {{pve_qemu.name}} -full {{pve_qemu.full_clone|default('false')}} -target {{pve_qemu.target_node}} -pool {{pve_qemu.pool}}"

- name: Get VM Configuration
  shell: "pvesh get /nodes/{{pve_qemu.target_node}}/qemu/{{pve_qemu.vmid}}/config --output-format json"
  register: vm_config
  changed_when: false

- name: Set Configuration Values
  when: (vm_config|from_json)[item.key] != item.value
  shell: "/usr/bin/pvesh set /nodes/{{pve_qemu.target_node}}/qemu/{{pve_qemu.vmid}}/config -{{item.key}} {{item.value}}"
  register: config_result
  failed_when: config_result.rc != 0 and config_result.rc != 255
  loop: pve_qemu.config
